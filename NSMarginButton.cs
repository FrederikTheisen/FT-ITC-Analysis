// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;
using CoreGraphics;

namespace AnalysisITC
{
	public partial class NSMarginButton : NSButton
	{
		public NSMarginButton (IntPtr handle) : base (handle)
		{
            
		}


        public override void DrawRect(CGRect dirtyRect)
        {
            // Reset the bounds after drawing is complete
            var orgImg = this.Image;
            var orgAltImg = this.AlternateImage;
            this.Image = null;
            this.AlternateImage = null;

            base.DrawRect(dirtyRect);

            try
            {
                var cg = NSGraphicsContext.CurrentContext.CGContext;
                var img = State == NSCellStateValue.Off ? orgAltImg : orgImg;
                var offset = State == NSCellStateValue.Off ? 3 : 5;
                var r = new CGRect(this.Bounds.Width / 2 - img.Size.Width / 2, this.Bounds.Height - img.Size.Height - offset, img.Size.Width, img.Size.Height);

                cg.SetAlpha(Enabled ? 1 : 0.33f);
                cg.DrawImage(r, img.AsCGImage(ref r, NSGraphicsContext.CurrentContext, null));
            }
            finally
            {
                this.Image = orgImg;
                this.AlternateImage = orgAltImg;
            }
        }
    }

    public partial class NSMarginCell : NSButtonCell
    {
        protected internal NSMarginCell(IntPtr handle) : base(handle)
        {
        }

        public NSMarginCell(NSButtonCell cell)
        {
            Image = cell.Image;
            AlternateImage = cell.AlternateImage;
            BezelStyle = cell.BezelStyle;
            CellType = cell.CellType;
            ImagePosition = cell.ImagePosition;
            Title = cell.Title;
            Action = cell.Action;
            Enabled = cell.Enabled;
        }

        public override CGRect ImageRectForBounds(CGRect theRect)
        {
            var newRect = new CGRect(theRect.X, theRect.Y + 10, theRect.Width, theRect.Height - 10);

            return base.ImageRectForBounds(newRect);
        }

        public override void DrawImage(NSImage image, CGRect frame, NSView controlView)
        {
            base.DrawImage(image, frame, controlView);
        }

        public override void CalcDrawInfo(CGRect aRect)
        {
            base.CalcDrawInfo(aRect);
        }

        public override void DrawWithFrame(CGRect cellFrame, NSView inView)
        {
            base.DrawWithFrame(cellFrame, inView);
        }

        public override CGRect DrawingRectForBounds(CGRect theRect)
        {
            return base.DrawingRectForBounds(theRect);
        }
    }
}
