// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;
using AnalysisITC.GUI.MacOS.CustomViews;
using AnalysisITC.AppClasses.Analysis2;
using System.Collections.Generic;

namespace AnalysisITC
{
	public partial class FittingOptionsPopoverViewController : NSViewController
	{
        List<ParameterValueAdjustmentView> ParameterOptionControls = new List<ParameterValueAdjustmentView>();

        partial void ErrorIterationSliderChanged(NSSlider sender) => ErrorIterationLabel.IntValue = (int)Math.Pow(10, ErrorIterationsControl.DoubleValue);

        public FittingOptionsPopoverViewController (IntPtr handle) : base (handle)
		{
		}

        public override void ViewWillAppear()
        {
            base.ViewWillAppear();

            ErrorIterationsControl.DoubleValue = Math.Log10(FittingOptionsController.BootstrapIterations);
            ErrorIterationLabel.IntValue = (int)Math.Pow(10, ErrorIterationsControl.DoubleValue);

            ErrorMethodControl.SelectedSegment = (int)FittingOptionsController.ErrorEstimationMethod;

            foreach (var par in ModelFactory.Factory.GetExposedParameters())
            {
                var sv = new ParameterValueAdjustmentView(new CoreGraphics.CGRect(0, 0, StackView.Frame.Width, 20));

                sv.Setup(par);

                ParameterOptionControls.Add(sv);

                StackView.InsertArrangedSubview(sv, 7);
            }
        }

        public override void ViewDidDisappear()
        {
            foreach (var sv in ParameterOptionControls) sv.Dispose();

            base.ViewDidDisappear();
        }

        partial void ApplyOptions(NSObject sender)
        {
            FittingOptionsController.ErrorEstimationMethod = (ErrorEstimationMethod)(int)ErrorMethodControl.SelectedSegment;
            FittingOptionsController.BootstrapIterations = (int)Math.Pow(10, ErrorIterationsControl.DoubleValue);

            foreach (var sv in ParameterOptionControls)
            {
                if (sv.HasBeenAffectedFlag)
                {
                    ModelFactory.Factory.SetCustomParameter(sv.Key, sv.Value, sv.Locked);
                }
            }

            DismissViewController(this);
        }
    }
}
