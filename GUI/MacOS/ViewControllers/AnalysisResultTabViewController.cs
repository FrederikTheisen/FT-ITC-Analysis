// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using AppKit;
using System.Linq;

namespace AnalysisITC
{
	public partial class AnalysisResultTabViewController : NSViewController
	{
        AnalysisResult AnalysisResult { get; set; }

		public AnalysisResultTabViewController (IntPtr handle) : base (handle)
		{
            DataManager.AnalysisResultSelected += DataManager_AnalysisResultSelected;
		}

        private void DataManager_AnalysisResultSelected(object sender, AnalysisResult e)
        {
            AnalysisResult = e;

            Graph.Initialize(e);

            Setup();
        }

        //public override void ViewDidAppear()
        //{
        //    base.ViewDidAppear();

        //    Setup();
        //}

        EnergyUnit EnergyUnit => (int)EnergyControl.SelectedSegment switch { 0 => EnergyUnit.Joule, 1 => EnergyUnit.KiloJoule, 2 => EnergyUnit.Cal, 3 => EnergyUnit.KCal, _ => EnergyUnit.KiloJoule, };
        public bool UseKelvin => TempControl.SelectedSegment == 1;
        double Mag = -1;

        public void Setup()
        {
            var kd = AnalysisResult.Solution.Solutions.Average(s => s.Kd);

            Mag = Math.Log10(kd);

            var kdunit = Mag switch
            {
                > 0 => "M",
                > -3 => "mM",
                > -6 => "µM",
                > -9 => "nM",
                > -12 => "pM",
                _ => "M"
            };

            var source = new ResultViewDataSource(AnalysisResult)
            {
                KdMag = Mag,
                EnergyUnit = EnergyUnit,
                UseKelvin = UseKelvin,
            };
            ResultsTableView.DataSource = source;
            ResultsTableView.Delegate = new ResultViewDelegate(source);
            ResultsTableView.TableColumns()[0].Title = "Temperature (" + (UseKelvin ? "K" : "°C") + ")";
            ResultsTableView.TableColumns()[2].Title = "Kd (" + kdunit + ")";
            ResultsTableView.TableColumns()[3].Title = "∆H (" + EnergyUnit.GetUnit() + "/mol)";
            ResultsTableView.TableColumns()[4].Title = "-T∆S (" + EnergyUnit.GetUnit() + "/molK)";
            ResultsTableView.TableColumns()[5].Title = "∆G (" + EnergyUnit.GetUnit() + "/mol)";

            //var test = new FTSRMethod(AnalysisResult.Solution.EnthalpyLine, AnalysisResult.Solution.EntropyLine);
            //test.Calculate(FTSRMethod.SRMode.IsoEntropicPoint);
            //test.Calculate(FTSRMethod.SRMode.MeanTemperature);

        }

        partial void TempControlClicked(NSSegmentedControl sender)
        {
            Setup();
        }

        partial void EnergyControlClicked(NSSegmentedControl sender)
        {
            Setup();
        }

        partial void CopyToClipboard(NSObject sender)
        {
            NSPasteboard.GeneralPasteboard.ClearContents();

            string paste = "";

            foreach (var data in AnalysisResult.Solution.Solutions)
            {
                paste += (data.T + (UseKelvin ? 273.15 : 0)).ToString("F2") + " ";
                paste += data.N.ToString("F2") + " ";
                paste += data.Kd.AsDissociationConstant(Mag, withunit: false) + " ";
                paste += data.Enthalpy.ToString(EnergyUnit, withunit: false) + " ";
                paste += data.TdS.ToString(EnergyUnit, withunit: false) + " ";
                paste += data.GibbsFreeEnergy.ToString(EnergyUnit, withunit: false);
                paste += Environment.NewLine;
            }

            paste = paste.Replace('±', ' ');

            NSPasteboard.GeneralPasteboard.SetStringForType(paste, "NSStringPboardType");

            StatusBarManager.SetStatus("Results copied to clipboard", 3333);
        }
    }
}
